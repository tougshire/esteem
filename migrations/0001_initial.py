# Generated by Django 3.1.3 on 2021-06-12 15:39

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="What is the customer's name?", max_length=200, verbose_name='name')),
                ('email', models.EmailField(blank=True, help_text="What is the customer's primary email address?", max_length=300, verbose_name='email')),
                ('phone', models.CharField(blank=True, help_text="What is the customer's primary phone number?", max_length=200, verbose_name='phone')),
                ('additional_contact', models.TextField(blank=True, help_text='What is the contact information other than primary email and primary phone?', verbose_name='additional contact information')),
                ('is_type_commercialgc', models.BooleanField(blank=True, default=False, help_text='Is this customer a general contractor?', verbose_name='Commercial GC')),
                ('is_type_builder', models.BooleanField(blank=True, default=False, help_text='Is this customer a builder?', verbose_name='builder')),
                ('is_type_remodeler', models.BooleanField(blank=True, default=False, help_text='Is this customer a remodeler?', verbose_name='remodeler')),
                ('is_type_homeowner', models.BooleanField(blank=True, default=False, help_text='Is this customer a homeowner?', verbose_name='homeowner')),
                ('billing_address', models.TextField(blank=True, help_text="What is the customer's billing address?", verbose_name='billing address')),
                ('archived', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='N', help_text='Should this customer be removed from the list of active customers?', max_length=1, verbose_name='archived')),
                ('business_card', models.FileField(blank=True, help_text="What is this customer's business card?", null=True, upload_to='', verbose_name='business card')),
                ('custom_logo', models.FileField(blank=True, help_text='For salespeople who work for this customer, what logo will be displayed?', null=True, upload_to='', verbose_name='logo')),
            ],
            options={
                'verbose_name': 'customer',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Estimator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of the estimator', max_length=200, verbose_name='name')),
                ('user', models.ForeignKey(blank=True, help_text='Who is the user associated with this estimator?', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'estimator',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Estirequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="What is the project's name?", max_length=200, verbose_name='project name')),
                ('requestnum', models.CharField(blank=True, help_text='What is the estimate request number?', max_length=20, unique=True, verbose_name='est.req#')),
                ('new_or_remodel', models.CharField(choices=[('N', 'New Construction'), ('R', 'Remodel')], default='N', help_text='Is this a new construction or a remodel?', max_length=2, verbose_name='new/remodel')),
                ('address', models.CharField(blank=True, help_text="What is the project's street address or lot number?", max_length=200, verbose_name='address/lot')),
                ('citystzip', models.CharField(blank=True, help_text="What is the project's city, state and zip?", max_length=200, verbose_name='city, state, zip')),
                ('create_date', models.DateField(blank=True, default=datetime.date.today, help_text='What is the date that this request was created?', verbose_name='date')),
                ('submit_date', models.DateField(blank=True, help_text='What is the date that this request was submitted for estimate?', null=True, verbose_name='date')),
                ('status', models.CharField(choices=[('DR', 'Draft'), ('SU', 'Submitted for Estimate'), ('ES', 'Estimate Submitted'), ('WN', 'Won'), ('LS', 'Lost')], default='DR', help_text='What is the status of this request', max_length=2, verbose_name='status')),
                ('comments', models.TextField(blank=True, help_text='What are comments for this request?', verbose_name='comments for estimator')),
                ('has_windows', models.BooleanField(default=False, help_text='Does this project have windows?', verbose_name='windows')),
                ('has_doors', models.BooleanField(default=False, help_text='Does this project have doors?', verbose_name='non-Marvin doors')),
                ('has_marvindoors', models.BooleanField(default=False, help_text='Does this project have Marvin doors?', verbose_name='marvin doors')),
                ('has_icfs', models.BooleanField(default=False, help_text='Does this project have ICF?', verbose_name='icf')),
                ('has_interiormillworks', models.BooleanField(default=False, help_text='Does this project have Interior Millwork?', verbose_name='interior millwork')),
                ('has_exteriormillworks', models.BooleanField(default=False, help_text='Does this project have Exterior Millwork?', verbose_name='exterior millwork')),
                ('customer', models.ForeignKey(blank=True, help_text='Who is the customer for this project?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.customer')),
            ],
            options={
                'verbose_name': 'estimate requested',
                'verbose_name_plural': 'estimates requested',
                'ordering': ('-create_date', '-submit_date', 'name'),
                'permissions': [('list_estirequests', 'Can list estirequests')],
            },
        ),
        migrations.CreateModel(
            name='OptionDoorBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this brand?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option door brand',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionExteriorMillworkDeckingBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this material?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option exterior millwork decking brand',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionExteriorMillworkDeckingCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this collection?', max_length=200, verbose_name='name')),
                ('optionexteriormillworkdeckingbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionexteriormillworkdeckingbrand')),
            ],
            options={
                'verbose_name': 'option exterior millwork decking collection',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionExteriorMillworkDeckingGrooves',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this groove option?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option exterior millwork decking grooves',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionExteriorMillworkRailingStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this style?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option exterior millwork railing style',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionICFWallThickness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the label to describe this thickness?', max_length=10, verbose_name='label')),
                ('inches', models.IntegerField(default=0, help_text='What is the thickness in inches?', verbose_name='inches')),
            ],
            options={
                'verbose_name': 'option icf wall thickness',
                'ordering': ['inches'],
            },
        ),
        migrations.CreateModel(
            name='OptionInteriorMillworkPrimarySpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this species?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option interior millwork primary species',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionInteriorMillworkRiserSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this species?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option interior millwork riser species',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionInteriorMillworkTreadSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this species?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option interior millwork tread species',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this brand?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option marvin door brand',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionWindowBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this brand?', max_length=200, verbose_name='name')),
            ],
            options={
                'verbose_name': 'option window brand',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(blank=True, decimal_places=1, help_text='What is the amount of the proposal?', max_digits=10, null=True, verbose_name='Amount')),
                ('create_date', models.DateField(blank=True, default=datetime.date.today, help_text='When was this proposal created?', verbose_name='date')),
                ('uploadedfile', models.FileField(blank=True, null=True, upload_to='documents/', verbose_name='file')),
                ('comments', models.TextField(blank=True, help_text='What are comments for this proposal?', verbose_name='comments')),
                ('estimator', models.ForeignKey(blank=True, help_text='Who submitted this proposal?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.estimator')),
                ('estirequest', models.ForeignKey(help_text='For which request is this sheet?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
            ],
            options={
                'verbose_name': 'proposal',
                'ordering': ('-create_date',),
                'permissions': [('list_proposals', 'Can list proposals')],
            },
        ),
        migrations.CreateModel(
            name='Salesperson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is he name of the salesperson', max_length=200, verbose_name='name')),
                ('associated_customer', models.ForeignKey(blank=True, help_text="If this salesperson works for a customer, who is this sales person's associated customer?", null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.customer')),
                ('user', models.ForeignKey(blank=True, help_text='Who is the user associated with this sales person?', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sales person',
                'verbose_name_plural': 'sales people',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProposalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='What is this documents title?', max_length=200, verbose_name='title')),
                ('uploadedfile', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('proposal', models.ForeignKey(help_text='What is the proposal to which this document is attached?', on_delete=django.db.models.deletion.CASCADE, to='esteem.proposal')),
            ],
            options={
                'verbose_name': 'proposal document',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='OptionWindowShade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of shade?', max_length=200, verbose_name='name')),
                ('optionwindowbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowbrand')),
            ],
            options={
                'verbose_name': 'option window shade',
                'ordering': ('optionwindowbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionWindowScreen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of screen?', max_length=200, verbose_name='name')),
                ('optionwindowbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowbrand')),
            ],
            options={
                'verbose_name': 'option window screen',
                'ordering': ('optionwindowbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionWindowLockSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of sensor?', max_length=200, verbose_name='name')),
                ('optionwindowbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowbrand')),
            ],
            options={
                'verbose_name': 'option window lock sensor',
                'ordering': ('optionwindowbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionWindowInteriorSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this finish?', max_length=200, verbose_name='name')),
                ('optionwindowbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowbrand')),
            ],
            options={
                'verbose_name': 'option window interior species',
                'ordering': ('optionwindowbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionWindowInteriorFinish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this finish?', max_length=200, verbose_name='name')),
                ('optionwindowbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowbrand')),
            ],
            options={
                'verbose_name': 'option window interior finish',
                'ordering': ('optionwindowbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionWindowHardwareFinish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this finish?', max_length=200, verbose_name='name')),
                ('optionwindowbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowbrand')),
            ],
            options={
                'verbose_name': 'option window hardware finish',
                'ordering': ('optionwindowbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionWindowExteriorColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this color?', max_length=200, verbose_name='name')),
                ('optionwindowbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowbrand')),
            ],
            options={
                'verbose_name': 'option window exterior color',
                'ordering': ('optionwindowbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorShade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of shade?', max_length=200, verbose_name='name')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
            ],
            options={
                'verbose_name': 'option marvin door shade',
                'ordering': ('optionmarvindoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorScreen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of screen?', max_length=200, verbose_name='name')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
            ],
            options={
                'verbose_name': 'option marvin door screen',
                'ordering': ('optionmarvindoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorLockSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of sensor?', max_length=200, verbose_name='name')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
            ],
            options={
                'verbose_name': 'option marvin door lock sensor',
                'ordering': ('optionmarvindoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorInteriorSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this species?', max_length=200, verbose_name='name')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
            ],
            options={
                'verbose_name': 'option marvin door interior species',
                'ordering': ('optionmarvindoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorInteriorFinish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this finish?', max_length=200, verbose_name='name')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
            ],
            options={
                'verbose_name': 'option marvin door interior finish',
                'ordering': ('optionmarvindoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorHardwareStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this style?', max_length=200, verbose_name='name')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
            ],
            options={
                'verbose_name': 'option marvin door hardware style',
                'ordering': ('optionmarvindoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorHardwareFinish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this finish?', max_length=200, verbose_name='name')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
            ],
            options={
                'verbose_name': 'option marvin door hardware finish',
                'ordering': ('optionmarvindoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionMarvinDoorExteriorColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this color?', max_length=200, verbose_name='name')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
            ],
            options={
                'verbose_name': 'option marvin door exterior color',
                'ordering': ('optionmarvindoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionExteriorMillworkDeckingColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this color?', max_length=200, verbose_name='name')),
                ('optionexteriormillworkdeckingcollection', models.ForeignKey(blank=True, help_text='What is the decking collection for which this color is an option?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.optionexteriormillworkdeckingcollection')),
            ],
            options={
                'verbose_name': 'option exterior millwork decking color',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OptionDoorShade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of shade?', max_length=200, verbose_name='name')),
                ('optiondoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorbrand')),
            ],
            options={
                'verbose_name': 'option door shade',
                'ordering': ('optiondoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionDoorScreen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of screen?', max_length=200, verbose_name='name')),
                ('optiondoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorbrand')),
            ],
            options={
                'verbose_name': 'option door screen',
                'ordering': ('optiondoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionDoorLockSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this type of sensor?', max_length=200, verbose_name='name')),
                ('optiondoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorbrand')),
            ],
            options={
                'verbose_name': 'option door lock sensor',
                'ordering': ('optiondoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionDoorInteriorFinish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this finish?', max_length=200, verbose_name='name')),
                ('optiondoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorbrand')),
            ],
            options={
                'verbose_name': 'option door interior finish',
                'ordering': ('optiondoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionDoorHardwareFinish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this finish?', max_length=200, verbose_name='name')),
                ('optiondoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorbrand')),
            ],
            options={
                'verbose_name': 'option door hardware finish',
                'ordering': ('optiondoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='OptionDoorExteriorColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='What is the name of this color?', max_length=200, verbose_name='name')),
                ('optiondoorbrand', models.ForeignKey(blank=True, help_text='What is the brand to which this options applies?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorbrand')),
            ],
            options={
                'verbose_name': 'option door exterior color',
                'ordering': ('optiondoorbrand', 'name'),
            },
        ),
        migrations.CreateModel(
            name='EstisheetWindow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_or_replacement', models.CharField(blank=True, choices=[('N', 'New Construction'), ('R', 'Replacement')], help_text='Is this window a new installation or a replacement?', max_length=2, null=True, verbose_name='new/replacement')),
                ('optionlock_sensors', models.BooleanField(default=False, help_text='Do these windows have lock sensors?', verbose_name='lock sensors')),
                ('comments', models.TextField(blank=True, help_text='What are comments for this estimate?', verbose_name='comments')),
                ('estirequest', models.ForeignKey(help_text='For what request is this sheet?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
                ('optionexterior_color', models.ForeignKey(blank=True, help_text='what is the exterior color of these windows?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowexteriorcolor', verbose_name='exterior color')),
                ('optionhardware_finish', models.ForeignKey(blank=True, help_text='what is the hardware finish of these windows?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowhardwarefinish', verbose_name='hardware finish')),
                ('optioninterior_finish', models.ForeignKey(blank=True, help_text='what is the interior finish of these windows?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowinteriorfinish', verbose_name='interior finish')),
                ('optionscreen', models.ForeignKey(blank=True, help_text='What screens are included with these windows?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowscreen', verbose_name='screens')),
                ('optionshades', models.ForeignKey(blank=True, help_text='what shades are included with these windows?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowshade', verbose_name='shades')),
                ('optionwindowbrand', models.ForeignKey(blank=True, help_text='What is the brand of these windows?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionwindowbrand')),
            ],
            options={
                'verbose_name': 'estimate sheet for windows',
                'ordering': ('estirequest',),
            },
        ),
        migrations.CreateModel(
            name='EstisheetMarvinDoor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_or_replacement', models.CharField(blank=True, choices=[('N', 'New Construction'), ('R', 'Replacement')], help_text='Is this door a new installation or a replacement?', max_length=2, null=True, verbose_name='new/replacement')),
                ('optionlock_sensors', models.BooleanField(default=False, help_text='Do these doors have lock sensors?', verbose_name='lock sensors')),
                ('comments', models.TextField(blank=True, help_text='What are comments for this estimate?', verbose_name='comments')),
                ('estirequest', models.ForeignKey(help_text='For what request is this sheet?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
                ('optionexterior_color', models.ForeignKey(blank=True, help_text='what is the exterior color of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorexteriorcolor', verbose_name='exterior color')),
                ('optionhardware_finish', models.ForeignKey(blank=True, help_text='what is the hardware finish of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorhardwarefinish', verbose_name='hardware finish')),
                ('optionhardware_style', models.ForeignKey(blank=True, help_text='what is the hardware style of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorhardwarestyle', verbose_name='hardware style')),
                ('optioninterior_finish', models.ForeignKey(blank=True, help_text='what is the interior finish of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorinteriorfinish', verbose_name='interior finish')),
                ('optionmarvindoorbrand', models.ForeignKey(blank=True, help_text='What is the brand of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorbrand')),
                ('optionscreens', models.ForeignKey(blank=True, help_text='What screens are included with these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorscreen', verbose_name='screens')),
                ('optionshades', models.ForeignKey(blank=True, help_text='what shades are included with these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optionmarvindoorshade', verbose_name='shades')),
            ],
            options={
                'verbose_name': 'estimate sheet for marvin door',
                'ordering': ('estirequest',),
            },
        ),
        migrations.CreateModel(
            name='EstisheetInteriorMillwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trim1baselength', models.CharField(blank=True, max_length=10, verbose_name='trim type 1 base length')),
                ('trim1basewidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 1 base width/size')),
                ('trim1casinglength', models.CharField(blank=True, max_length=10, verbose_name='trim type 1 casing length')),
                ('trim1casingwidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 1 casing width/size')),
                ('trim1crownlength', models.CharField(blank=True, max_length=10, verbose_name='trim type 1 crown length')),
                ('trim1crownwidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 1 crown width/size')),
                ('trim1comments', models.CharField(blank=True, max_length=100, verbose_name='trim type 1 comments length')),
                ('trim1commentswidthsize', models.CharField(blank=True, max_length=100, verbose_name='trim type 1 comments width/size')),
                ('trim2baselength', models.CharField(blank=True, max_length=10, verbose_name='trim type 2 base length')),
                ('trim2basewidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 2 base width/size')),
                ('trim2casinglength', models.CharField(blank=True, max_length=10, verbose_name='trim type 2 casing length')),
                ('trim2casingwidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 2 casing width/size')),
                ('trim2crownlength', models.CharField(blank=True, max_length=10, verbose_name='trim type 2 crown length')),
                ('trim2crownwidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 2 crown width/size')),
                ('trim2comments', models.CharField(blank=True, max_length=100, verbose_name='trim type 2 comments length')),
                ('trim2commentswidthsize', models.CharField(blank=True, max_length=100, verbose_name='trim type 2 comments width/size')),
                ('trim3baselength', models.CharField(blank=True, max_length=10, verbose_name='trim type 3 base length')),
                ('trim3basewidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 3 base width/size')),
                ('trim3casinglength', models.CharField(blank=True, max_length=10, verbose_name='trim type 3 casing length')),
                ('trim3casingwidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 3 casing width/size')),
                ('trim3crownlength', models.CharField(blank=True, max_length=10, verbose_name='trim type 3 crown length')),
                ('trim3crownwidthsize', models.CharField(blank=True, max_length=10, verbose_name='trim type 3 crown width/size')),
                ('trim3comments', models.CharField(blank=True, max_length=100, verbose_name='trim type 3 comments length')),
                ('trim3commentswidthsize', models.CharField(blank=True, max_length=100, verbose_name='trim type 3 comments width/size')),
                ('windowstoolskirt', models.BooleanField(blank=True, default=False, verbose_name='window stool with skirt')),
                ('pictureframe', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='N', max_length=1, verbose_name='picture frame')),
                ('casingdetails', models.CharField(blank=True, max_length=30, verbose_name='casing details')),
                ('dwreturn', models.BooleanField(blank=True, default=False, verbose_name='dwreturn')),
                ('interiorcolumns', models.CharField(blank=True, max_length=30, verbose_name='interiordoors')),
                ('interiordoors', models.CharField(blank=True, max_length=30, verbose_name='interiordoors')),
                ('doorstyle', models.CharField(blank=True, max_length=30, verbose_name='doorstyle')),
                ('doorhanging', models.CharField(blank=True, max_length=30, verbose_name='hanging')),
                ('jambthickness', models.CharField(blank=True, max_length=30, verbose_name='jambthickness')),
                ('specialtydoors', models.CharField(blank=True, max_length=80, verbose_name='specialtydoors')),
                ('stair1handrail', models.CharField(blank=True, max_length=30, verbose_name='stair1handrail')),
                ('stair1picketnewel', models.CharField(blank=True, max_length=100, verbose_name='stair1picketnewel')),
                ('stair2handrail', models.CharField(blank=True, max_length=30, verbose_name='stair2handrail')),
                ('stair2picketnewel', models.CharField(blank=True, max_length=30, verbose_name='stair2picketnewel')),
                ('stair3handrail', models.CharField(blank=True, max_length=30, verbose_name='stair3handrail')),
                ('stair3picketnewel', models.CharField(blank=True, max_length=30, verbose_name='stair3picketnewel')),
                ('stairnotes', models.CharField(blank=True, max_length=30, verbose_name='stairnotes ')),
                ('wainscot', models.CharField(blank=True, max_length=80, verbose_name='wainscot')),
                ('cofferedceiling', models.CharField(blank=True, max_length=80, verbose_name='coffered ceiling')),
                ('comments', models.TextField(blank=True, help_text='What are comments for this estimate?', verbose_name='comments')),
                ('estirequest', models.ForeignKey(help_text='For what request is this sheet?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
                ('primaryspecies', models.ForeignKey(blank=True, help_text='What is the primary species for this millwork?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.optioninteriormillworkprimaryspecies')),
                ('stair1riserspecies', models.ForeignKey(blank=True, help_text='What is the species for this riser?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stair1riser', to='esteem.optioninteriormillworkriserspecies')),
                ('stair1treadspecies', models.ForeignKey(blank=True, help_text='What is the species for this tread?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stair1tread', to='esteem.optioninteriormillworktreadspecies')),
                ('stair2riserspecies', models.ForeignKey(blank=True, help_text='What is the species for this riser?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stair2riser', to='esteem.optioninteriormillworkriserspecies')),
                ('stair2treadspecies', models.ForeignKey(blank=True, help_text='What is the species for this tread?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stair2tread', to='esteem.optioninteriormillworktreadspecies')),
                ('stair3riserspecies', models.ForeignKey(blank=True, help_text='What is the species for this riser?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stair3riser', to='esteem.optioninteriormillworkriserspecies')),
                ('stair3treadspecies', models.ForeignKey(blank=True, help_text='What is the species for this tread?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stair3tread', to='esteem.optioninteriormillworktreadspecies')),
            ],
            options={
                'verbose_name': 'estimate sheet for interior millwork',
                'ordering': ('estirequest',),
            },
        ),
        migrations.CreateModel(
            name='EstisheetICF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optionpargecoating', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='N', help_text='Does this estimate include foundation parge coating?', max_length=1, null=True, verbose_name='foundation parge coating')),
                ('optionbgmembrane', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='N', help_text='Does this estimate include below grade membrane?', max_length=1, null=True, verbose_name='below grade membrane')),
                ('optionslabinsulation', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='N', help_text='Does this estimate include slab on grade insullation?', max_length=1, null=True, verbose_name='slab on grade insullation')),
                ('optionfloor', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='N', help_text='Does this estimate include an ICF floor system?', max_length=1, null=True, verbose_name='ICF floor system')),
                ('optionroof', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='N', help_text='Does this estimate include an ICF roof system?', max_length=1, null=True, verbose_name='ICF roof system')),
                ('comments', models.TextField(blank=True, help_text='What are comments for this estimate?', verbose_name='comments')),
                ('estirequest', models.ForeignKey(help_text='For what request is this sheet?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
                ('option0thickness', models.ForeignKey(blank=True, help_text='what is the foundation wall thickness?', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='icf0wall0', to='esteem.optionicfwallthickness', verbose_name='foundation wall thickness')),
                ('option1thickness', models.ForeignKey(blank=True, help_text='what is the first floor wall thickness?', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='icfwall1', to='esteem.optionicfwallthickness', verbose_name='1st floor wall thickness')),
                ('option2thickness', models.ForeignKey(blank=True, help_text='what is the second floor wall thickness?', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='icfwall2', to='esteem.optionicfwallthickness', verbose_name='2nd floor wall thickness')),
                ('option3thickness', models.ForeignKey(blank=True, help_text='what is the third floor wall thickness?', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='icfwall3', to='esteem.optionicfwallthickness', verbose_name='3rd floor wall thickness')),
                ('optionbthickness', models.ForeignKey(blank=True, help_text='what is the basement wall thickness?', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='icfbwall0', to='esteem.optionicfwallthickness', verbose_name='basement wall thickness')),
            ],
            options={
                'verbose_name': 'estimate sheet for icf',
                'ordering': ('estirequest',),
            },
        ),
        migrations.CreateModel(
            name='EstisheetExteriorMillwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('railingstylecomments', models.CharField(blank=True, help_text='What is the railing style?', max_length=255, verbose_name='railing style comments')),
                ('railinglevel', models.CharField(blank=True, help_text='What is the quantity of level rail?', max_length=25, verbose_name='level rail sections')),
                ('railingstair', models.CharField(blank=True, help_text='What is the quantity of stair rail?', max_length=25, verbose_name='stair rail sections')),
                ('takeoff', models.FileField(blank=True, help_text='What is the take off?', max_length=25, null=True, upload_to='documents/', verbose_name='take off')),
                ('railingnewelposts', models.CharField(blank=True, default=0, help_text='How many newel posts  are to be installed', max_length=6, verbose_name='structural newel posts')),
                ('railingnewelbrackets', models.CharField(blank=True, default=0, help_text='How many newel brackets are to be installed', max_length=6, verbose_name='install newel brackets')),
                ('railingnewelcovers', models.CharField(blank=True, default=0, help_text='How many newel covers are to be installed', max_length=6, verbose_name='install newel covers')),
                ('columncomments', models.CharField(blank=True, help_text='What are any comments about columns?', max_length=255, verbose_name='column comments')),
                ('shutters', models.CharField(blank=True, help_text='What are any notes about shutters?', max_length=255, verbose_name='shutter comments')),
                ('deckingcolor', models.ForeignKey(blank=True, help_text='What is the decking color?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.optionexteriormillworkdeckingcolor')),
                ('deckinggrooves', models.ForeignKey(blank=True, help_text='What kind of grooving does this decking have?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.optionexteriormillworkdeckinggrooves')),
                ('estirequest', models.ForeignKey(help_text='For what request is this sheet?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
                ('optionexteriormillworkdeckingbrand', models.ForeignKey(blank=True, help_text='What is the decking material?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.optionexteriormillworkdeckingbrand')),
                ('optionexteriormillworkdeckingcollection', models.ForeignKey(blank=True, help_text='What is the decking collection?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.optionexteriormillworkdeckingcollection')),
                ('railingstyle', models.ForeignKey(blank=True, help_text='What is the railing style?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.optionexteriormillworkrailingstyle')),
            ],
            options={
                'verbose_name': 'estimate sheet for exterior millwork',
                'ordering': ('estirequest',),
            },
        ),
        migrations.CreateModel(
            name='EstisheetDoor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_or_replacement', models.CharField(blank=True, choices=[('N', 'New Construction'), ('R', 'Replacement')], help_text='Is this door a new installation or a replacement?', max_length=2, null=True, verbose_name='new/replacement')),
                ('model_number', models.CharField(blank=True, help_text='What is the model number of this door?', max_length=200, verbose_name='model number')),
                ('size', models.CharField(blank=True, help_text='What is the size of door?', max_length=20, verbose_name='size')),
                ('handing', models.CharField(blank=True, help_text='What are the handing and other considerations for this door?', max_length=200, verbose_name='handing')),
                ('transom_height', models.CharField(blank=True, help_text='What is the height of the transom?', max_length=200, verbose_name='transom height')),
                ('optionhardware_style', models.CharField(blank=True, help_text='What is the hardware style of these doors?', max_length=50, verbose_name='hardware style')),
                ('optionlock_sensors', models.BooleanField(default=False, help_text='Do these doors have lock sensors?', verbose_name='lock sensors')),
                ('comments', models.TextField(blank=True, help_text='What are comments for this estimate?', verbose_name='comments')),
                ('estirequest', models.ForeignKey(help_text='For which request is this sheet?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
                ('optiondoorbrand', models.ForeignKey(blank=True, help_text='What is the brand of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorbrand')),
                ('optionexterior_color', models.ForeignKey(blank=True, help_text='what is the exterior color of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorexteriorcolor', verbose_name='exterior color')),
                ('optionhardware_finish', models.ForeignKey(blank=True, help_text='what is the hardware finish of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorhardwarefinish', verbose_name='hardware finish')),
                ('optioninterior_finish', models.ForeignKey(blank=True, help_text='what is the interior finish of these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorinteriorfinish', verbose_name='interior finish')),
                ('optionscreen', models.ForeignKey(blank=True, help_text='What screens are included with these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorscreen', verbose_name='screens')),
                ('optionshades', models.ForeignKey(blank=True, help_text='what shades are included with these doors?', null=True, on_delete=django.db.models.deletion.PROTECT, to='esteem.optiondoorshade', verbose_name='shades')),
            ],
            options={
                'verbose_name': 'estimate sheet for non-marvin door',
                'ordering': ('estirequest',),
            },
        ),
        migrations.CreateModel(
            name='EstirequestDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='What is this documents title?', max_length=200, verbose_name='title')),
                ('uploadedfile', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('estirequest', models.ForeignKey(help_text='What is the request to which this document is attached?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
            ],
            options={
                'verbose_name': 'estimate request document',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estirequest', models.ForeignKey(help_text='For which project is this assigment?', on_delete=django.db.models.deletion.CASCADE, to='esteem.estirequest')),
                ('salesperson', models.ForeignKey(blank=True, help_text='Who is the salesperson of this project', null=True, on_delete=django.db.models.deletion.SET_NULL, to='esteem.salesperson')),
            ],
            options={
                'verbose_name': 'assignment',
                'ordering': ('salesperson',),
            },
        ),
        migrations.CreateModel(
            name='QueryEstirequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_name', models.CharField(blank=True, help_text='The name of this query', max_length=50, verbose_name='query name')),
                ('latest_use', models.DateTimeField(auto_now=True, help_text='The most recent use of this query', verbose_name='last used')),
                ('name_value', models.CharField(blank=True, max_length=30, verbose_name='name')),
                ('name_use', models.BooleanField(default=False, verbose_name='use name')),
                ('name_operator', models.CharField(choices=[('name__iexact', 'equals'), ('name__icontains', 'contains')], default='name__icontains', max_length=100, verbose_name='name operator')),
                ('address_value', models.CharField(blank=True, max_length=30, verbose_name='address')),
                ('address_use', models.BooleanField(default=False, verbose_name='use address')),
                ('address_operator', models.CharField(choices=[('address__iexact', 'equals'), ('address__icontains', 'contains')], default='address__icontains', max_length=100, verbose_name='address operator')),
                ('orderby1', models.CharField(choices=[('name', 'Name')], default='makemodel', max_length=20, verbose_name='order by')),
                ('orderby2', models.CharField(choices=[('name', 'Name')], default='inventory', max_length=20, verbose_name='order by')),
                ('orderby3', models.CharField(choices=[('name', 'Name')], default='condition', max_length=20, verbose_name='order by')),
                ('paginate_by', models.IntegerField(default=10, verbose_name='paginate by')),
                ('user', models.ForeignKey(blank=True, help_text='who is the user associated with the setting', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estirequest_query', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'ordering': ['-latest_use'],
                'unique_together': {('query_name', 'user')},
            },
        ),
    ]
